/** * Created by Star on 2014/4/17 0017. */app.factory('dateData', ['$http', '$q', '$rootScope', 'dataSelecter' , function ($http, $q, $rootScope, dataSelecter) {	return {		data: '',		sum: '',		getData: function () {			var deferred = $q.defer();			var flag = null;			var self = this;			var socket = io.connect('http://localhost:3002');			console.log($rootScope.chartType);			switch ($rootScope.chartType) {				case '输入法OEM版数据':					flag = 'IME_OEM';					break;				case '输入法ONLINE数据':					flag = 'IME_ONLINE';					break;				case '号码助手数据':					flag = 'dialer';					break;				default :					console.log('dataType is error');			}			if (!$rootScope.dateEnd) {//				$http.post('dateData', {'date': $rootScope.dateStart, 'flag': flag}).success(function (data) {//					deferred.resolve(data);//				}).error(function (err) {//					console.log(err);//				});//				return deferred.promise;				var localData = window.localStorage.getItem($rootScope.dateStart);				if (localData && localData != 'null') {					var needData = JSON.parse(localData);					needData = $.extend({}, needData);					dataSelecter(needData, flag);					self.data = needData;					socket.removeAllListeners();					return 'local';				}				socket.emit('oneDay', {"Date": $rootScope.dateStart, 'flag': flag});				socket.on('oneDayData', function (data) {					if (!data) {						socket.removeAllListeners();						return;					}					window.localStorage.setItem($rootScope.dateStart, data);					var needData = JSON.parse(data);					needData = $.extend({}, needData);					dataSelecter(needData, flag);					deferred.resolve(needData);					socket.removeAllListeners();				});				return deferred.promise;			} else {				var startMon = $rootScope.dateStart.slice(4, 6);				var endMon = $rootScope.dateEnd.slice(4, 6);				console.log(startMon + ',' + endMon);				var dateStart = $rootScope.dateStart;				var dateEnd = $rootScope.dateEnd;				for (var i = 0; i < (dateStart - dateEnd); i++) {					var local = window.localStorage.getItem(dateStart + i);					if(local && local != 'null'){					}				}			}		}	};}]);app.factory('dataSelecter', function () {	return function (data, regexFlag) {		var regex = '/^' + regexFlag + '/i';		regex = eval(regex);		var dataObj = data;		for (var key in dataObj) {			if (!regex.test(key)) {				delete dataObj[key];			}		}		return dataObj;	}});